@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
  .btn-primary {
    @apply bg-blue-ufal text-white-100 text-xl px-[3.25rem] h-12 py-2 shadow-button;
  }

  .btn-secondary {
    @apply bg-gray-text text-white-100 text-xl px-[3.25rem] h-12 py-2 shadow-button;
  }

  .btn-tertiary {
    @apply bg-gray-medium text-gray-text text-xl px-[3.25rem] h-12 py-2 shadow-button;
  }

  .btn-primary-action {
    @apply bg-gray-text text-white-100 text-base px-[0.625rem] h-[2.625rem] py-2 shadow-button;
  }

  .btn-secondary-action {
    @apply bg-gray-medium text-gray-text text-base px-[0.625rem] h-[2.625rem] py-2 shadow-button;
  }

  .tab {
    @apply bg-white-ice shadow-tab py-0 px-5 h-11 flex-1 flex items-center justify-center
    text-base text-light-bg select-none border-2 border-b border-gray-medium rounded-t-lg
    hover:text-blue-ufal hover:cursor-pointer focus:relative
  }

/* mobile */
  .btn-text-only {
    @apply bg-transparent text-blue-ufal text-base w-full py-4;
  }
  .btn-primary-mobile {
    @apply bg-blue-ufal text-white-100 text-base px-[6.25rem] py-4 shadow-button;
  }

  /* classes para estilização do Menu lateral responsivo */

  input:checked + .checkbox-wrapper {
    @apply w-[3.75rem];

  }

  input:checked + .checkbox-wrapper img {
    @apply w-[2.176rem] h-[3.736rem] mx-3 mb-[-1rem];

  }

  input:checked + .checkbox-wrapper .text-hidden {
    @apply hidden;

  }

  input:checked + .checkbox-wrapper .text-invisible {
    @apply invisible;

  }

  
  input:checked + .checkbox-wrapper .increaseIcon {
    @apply w-full  justify-center items-center;

  }

  


 /* Chackbox e Ícone de botão que vão mudar conforme o clique do menu. Colocar a rotação e transition do ícone aqui */
  .floatToggle {
    color: white;
    left: 3rem;
    top: 2rem;
    float: right;
    position: relative;
  
  }

  
/* Colocar a rotação e transition do ícone aqui. usar o webkit transform: rotate() e construir as barras uma por uma  (usando 3 divs) e depois rotacionar quando estiver no checked. (foi exatamente assim que fiz no Figma) */
  input:checked + .checkbox-wrapper .floatToggle .change {
  transform: translateX(-30%);
  }

  input:checked + .checkbox-wrapper .floatToggle .change .bar1 {
  -webkit-transform: rotate(-45deg) translate(-5px, 7px) ;
  transform: rotate(-45deg) translate(-6px, 7px) ;
  margin:0;
  padding:0;
  width:100%;
  }

  input:checked + .checkbox-wrapper .floatToggle .change .bar2 {
  visibility: hidden;
  }

  input:checked + .checkbox-wrapper .floatToggle .change .bar3 {
  -webkit-transform: rotate(45deg) translate(-3px, -5px) ;
  transform: rotate(45deg) translate(1px, -4px);
  
  }

  /* tentar fazwer usando o dialog do radix */
  @media screen and (max-width: 1440px) {
    .floatToggle {
      left: 3rem;
      top: 1rem;
    }

    .mobile-hidden {
      /*display: none;*/
      visibility: hidden;
    }

    input:checked + .checkbox-wrapper .floatToggle .change {
      transform: translateX(30%);
    }

  input:checked + .checkbox-wrapper .floatToggle .change .bar1 {
  -webkit-transform: rotate(-45deg) translate(-5px, 7px) ;
  transform: rotate(-45deg) translate(-6px, 7px) ;
  margin:0;
  padding:0;
  width:100%;
  }

  input:checked + .checkbox-wrapper .floatToggle .change .bar2 {
  visibility: hidden;
  }

  input:checked + .checkbox-wrapper .floatToggle .change .bar3 {
  -webkit-transform: rotate(45deg) translate(-3px, -5px) ;
  transform: rotate(45deg) translate(1px, -4px);
  
  }


  input:checked + .checkbox-wrapper {
    @apply w-[13.375rem] fixed z-10;

  }

  input:checked + .checkbox-wrapper .mobile-hidden {
    @apply visible ;

  }

  input:checked + .checkbox-wrapper img {
    @apply w-[2.176rem] h-[3.736rem] mx-3 visible mb-3;

  }

  input:checked + .checkbox-wrapper .text-hidden {
    @apply visible block;

  }

  input:checked + .checkbox-wrapper .text-invisible {
    @apply visible block;

  }

  input:checked + .checkbox-wrapper .modal {
    @apply relative top-[-.1rem]  bg-black opacity-20 w-auto h-auto flex flex-row;

  }


  }
  
 

  
}